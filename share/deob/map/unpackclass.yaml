---
classes:
  unpackclass!a: "ByteArray"
  unpackclass!aa: "Js5"
  unpackclass!c: "BufferPool"
  unpackclass!e: "Buffer"
  unpackclass!f: "LinkedList"
  unpackclass!g: "Member"
  unpackclass!h: "Bzip2DState"
  unpackclass!i: "IntHashTable"
  unpackclass!j: "Attribute"
  unpackclass!k: "GzipDecompressor"
  unpackclass!l: "ArrayUtils"
  unpackclass!n: "ExceptionTableEntry"
  unpackclass!o: "LineNumberTableEntry"
  unpackclass!p: "Js5File"
  unpackclass!q: "TracingException"
  unpackclass!r: "Code"
  unpackclass!s: "ConstantPoolEntry"
  unpackclass!u: "Bzip2Decompressor"
  unpackclass!unpackclass: "unpackclass"
  unpackclass!w: "Node"
fields:
  unpackclass!a.a Z:
    owner: "ByteArray"
    name: "directBuffersUnsupported"
  unpackclass!aa.a I:
    owner: "Js5"
    name: "size"
  unpackclass!aa.b [I:
    owner: "Js5"
    name: "groupIds"
  unpackclass!aa.c [I:
    owner: "Js5"
    name: "groupNameHashes"
  unpackclass!aa.d [I:
    owner: "Js5"
    name: "groupChecksums"
  unpackclass!aa.e [I:
    owner: "Js5"
    name: "groupVersions"
  unpackclass!aa.f [I:
    owner: "Js5"
    name: "groupSizes"
  unpackclass!aa.g [[I:
    owner: "Js5"
    name: "fileIds"
  unpackclass!aa.h [[I:
    owner: "Js5"
    name: "fileNameHashes"
  unpackclass!aa.i [Lunpackclass!i;:
    owner: "Js5"
    name: "fileNameHashTables"
  unpackclass!aa.j [Ljava/lang/Object;:
    owner: "Js5"
    name: "packed"
  unpackclass!aa.k [I:
    owner: "Js5"
    name: "groupCapacities"
  unpackclass!aa.l [[Ljava/lang/Object;:
    owner: "Js5"
    name: "unpacked"
  unpackclass!aa.m Lunpackclass!k;:
    owner: "Js5"
    name: "GZIP_DECOMPRESSOR"
  unpackclass!aa.n I:
    owner: "Js5"
    name: "checksum"
  unpackclass!aa.o Z:
    owner: "Js5"
    name: "discardPacked"
  unpackclass!aa.p Z:
    owner: "Js5"
    name: "discardUnpacked"
  unpackclass!aa.q Z:
    owner: "Js5"
    name: "RAISE_EXCEPTIONS"
  unpackclass!aa.r I:
    owner: "Js5"
    name: "MAX_LENGTH"
  unpackclass!c.a I:
    owner: "BufferPool"
    name: "smallBufferCount"
  unpackclass!c.b I:
    owner: "BufferPool"
    name: "mediumBufferCount"
  unpackclass!c.c I:
    owner: "BufferPool"
    name: "largeBufferCount"
  unpackclass!c.d [[B:
    owner: "BufferPool"
    name: "smallBuffers"
  unpackclass!c.e [[B:
    owner: "BufferPool"
    name: "mediumBuffers"
  unpackclass!c.f [[B:
    owner: "BufferPool"
    name: "largeBuffers"
  unpackclass!e.d [B:
    owner: "Buffer"
    name: "bytes"
  unpackclass!e.e I:
    owner: "Buffer"
    name: "position"
  unpackclass!e.f [I:
    owner: "Buffer"
    name: "CRC32_TABLE"
  unpackclass!e.g [J:
    owner: "Buffer"
    name: "CRC64_TABLE"
  unpackclass!f.a Lunpackclass!w;:
    owner: "LinkedList"
    name: "sentinel"
  unpackclass!f.b Lunpackclass!w;:
    owner: "LinkedList"
    name: "cursor"
  unpackclass!g.a I:
    owner: "Member"
    name: "accessFlags"
  unpackclass!g.b Lunpackclass!s;:
    owner: "Member"
    name: "nameAndType"
  unpackclass!g.c [Lunpackclass!j;:
    owner: "Member"
    name: "attributes"
  unpackclass!h.A [B:
    owner: "Bzip2DState"
    name: "selectorMtf"
  unpackclass!h.B [[B:
    owner: "Bzip2DState"
    name: "len"
  unpackclass!h.C [[I:
    owner: "Bzip2DState"
    name: "limit"
  unpackclass!h.D [[I:
    owner: "Bzip2DState"
    name: "base"
  unpackclass!h.E [[I:
    owner: "Bzip2DState"
    name: "perm"
  unpackclass!h.F [I:
    owner: "Bzip2DState"
    name: "minLens"
  unpackclass!h.G I:
    owner: "Bzip2DState"
    name: "saveNblock"
  unpackclass!h.a [B:
    owner: "Bzip2DState"
    name: "strmNextIn"
  unpackclass!h.b I:
    owner: "Bzip2DState"
    name: "strmNextInPtr"
  unpackclass!h.c I:
    owner: "Bzip2DState"
    name: "strmTotalInLo32"
  unpackclass!h.d [B:
    owner: "Bzip2DState"
    name: "strmNextOut"
  unpackclass!h.e I:
    owner: "Bzip2DState"
    name: "strmNextOutPtr"
  unpackclass!h.f I:
    owner: "Bzip2DState"
    name: "strmAvailOut"
  unpackclass!h.g I:
    owner: "Bzip2DState"
    name: "strmTotalOutLo32"
  unpackclass!h.h B:
    owner: "Bzip2DState"
    name: "stateOutCh"
  unpackclass!h.i I:
    owner: "Bzip2DState"
    name: "stateOutLen"
  unpackclass!h.j I:
    owner: "Bzip2DState"
    name: "bsBuff"
  unpackclass!h.k I:
    owner: "Bzip2DState"
    name: "bsLive"
  unpackclass!h.l I:
    owner: "Bzip2DState"
    name: "blockSize100k"
  unpackclass!h.m I:
    owner: "Bzip2DState"
    name: "origPtr"
  unpackclass!h.n I:
    owner: "Bzip2DState"
    name: "tPos"
  unpackclass!h.o I:
    owner: "Bzip2DState"
    name: "k0"
  unpackclass!h.p [I:
    owner: "Bzip2DState"
    name: "unfztab"
  unpackclass!h.q I:
    owner: "Bzip2DState"
    name: "nblockUsed"
  unpackclass!h.r [I:
    owner: "Bzip2DState"
    name: "cftab"
  unpackclass!h.s [I:
    owner: "Bzip2DState"
    name: "tt"
  unpackclass!h.t I:
    owner: "Bzip2DState"
    name: "nInUse"
  unpackclass!h.u [Z:
    owner: "Bzip2DState"
    name: "inUse"
  unpackclass!h.v [Z:
    owner: "Bzip2DState"
    name: "inUse16"
  unpackclass!h.w [B:
    owner: "Bzip2DState"
    name: "seqToUnseq"
  unpackclass!h.x [B:
    owner: "Bzip2DState"
    name: "mtfa"
  unpackclass!h.y [I:
    owner: "Bzip2DState"
    name: "mtfbase"
  unpackclass!h.z [B:
    owner: "Bzip2DState"
    name: "selector"
  unpackclass!i.a [I:
    owner: "IntHashTable"
    name: "buckets"
  unpackclass!j.a Lunpackclass!s;:
    owner: "Attribute"
    name: "name"
  unpackclass!j.b Lunpackclass!s;:
    owner: "Attribute"
    name: "constantValue"
  unpackclass!j.c Lunpackclass!r;:
    owner: "Attribute"
    name: "code"
  unpackclass!j.d [Lunpackclass!s;:
    owner: "Attribute"
    name: "exceptions"
  unpackclass!k.a Ljava/util/zip/Inflater;:
    owner: "GzipDecompressor"
    name: "inflater"
  unpackclass!n.a I:
    owner: "ExceptionTableEntry"
    name: "startPc"
  unpackclass!n.b I:
    owner: "ExceptionTableEntry"
    name: "endPcToHandlerPc"
  unpackclass!n.c I:
    owner: "ExceptionTableEntry"
    name: "reverseHandlerPc"
  unpackclass!n.d Lunpackclass!s;:
    owner: "ExceptionTableEntry"
    name: "catchType"
  unpackclass!o.a I:
    owner: "LineNumberTableEntry"
    name: "startPc"
  unpackclass!o.b I:
    owner: "LineNumberTableEntry"
    name: "lineNumber"
  unpackclass!r.a I:
    owner: "Code"
    name: "maxStack"
  unpackclass!r.b I:
    owner: "Code"
    name: "maxLocals"
  unpackclass!r.c I:
    owner: "Code"
    name: "length"
  unpackclass!r.d [Lunpackclass!n;:
    owner: "Code"
    name: "exceptionTable"
  unpackclass!r.e [Lunpackclass!o;:
    owner: "Code"
    name: "lineNumberTable"
  unpackclass!s.d Lunpackclass!s;:
    owner: "ConstantPoolEntry"
    name: "name"
  unpackclass!s.e Lunpackclass!s;:
    owner: "ConstantPoolEntry"
    name: "descriptor"
  unpackclass!s.f J:
    owner: "ConstantPoolEntry"
    name: "longValue"
  unpackclass!s.g [B:
    owner: "ConstantPoolEntry"
    name: "bytesValue"
  unpackclass!s.h I:
    owner: "ConstantPoolEntry"
    name: "tag"
  unpackclass!s.i I:
    owner: "ConstantPoolEntry"
    name: "index"
  unpackclass!u.a Lunpackclass!h;:
    owner: "Bzip2Decompressor"
    name: "state"
  unpackclass!unpackclass.A [Lunpackclass!s;:
    owner: "unpackclass"
    name: "utf8Entries"
  unpackclass!unpackclass.B [Lunpackclass!s;:
    owner: "unpackclass"
    name: "stringEntries"
  unpackclass!unpackclass.C [Lunpackclass!s;:
    owner: "unpackclass"
    name: "classEntries"
  unpackclass!unpackclass.D Lunpackclass!s;:
    owner: "unpackclass"
    name: "constantValue"
  unpackclass!unpackclass.E Lunpackclass!s;:
    owner: "unpackclass"
    name: "code"
  unpackclass!unpackclass.F Lunpackclass!s;:
    owner: "unpackclass"
    name: "exceptions"
  unpackclass!unpackclass.G Lunpackclass!s;:
    owner: "unpackclass"
    name: "sourceFile"
  unpackclass!unpackclass.H Lunpackclass!s;:
    owner: "unpackclass"
    name: "lineNumberTable"
  unpackclass!unpackclass.I Lunpackclass!f;:
    owner: "unpackclass"
    name: "constantPool"
  unpackclass!unpackclass.J I:
    owner: "unpackclass"
    name: "constantPoolSize"
  unpackclass!unpackclass.K [I:
    owner: "unpackclass"
    name: "OPCODE_FLAGS"
  unpackclass!unpackclass.a [I:
    owner: "unpackclass"
    name: "CONSTANT_POOL_ENTRY_LENGTHS"
  unpackclass!unpackclass.b Lunpackclass!e;:
    owner: "unpackclass"
    name: "in"
  unpackclass!unpackclass.c Lunpackclass!e;:
    owner: "unpackclass"
    name: "newArrayBuffer"
  unpackclass!unpackclass.d Lunpackclass!e;:
    owner: "unpackclass"
    name: "localVariableBuffer"
  unpackclass!unpackclass.e Lunpackclass!e;:
    owner: "unpackclass"
    name: "wideLocalVariableBuffer"
  unpackclass!unpackclass.f Lunpackclass!e;:
    owner: "unpackclass"
    name: "sipushAndSwitchBuffer"
  unpackclass!unpackclass.g Lunpackclass!e;:
    owner: "unpackclass"
    name: "constantBuffer"
  unpackclass!unpackclass.h Lunpackclass!e;:
    owner: "unpackclass"
    name: "wideConstantBuffer"
  unpackclass!unpackclass.i Lunpackclass!e;:
    owner: "unpackclass"
    name: "classBuffer"
  unpackclass!unpackclass.j Lunpackclass!e;:
    owner: "unpackclass"
    name: "fieldRefBuffer"
  unpackclass!unpackclass.k Lunpackclass!e;:
    owner: "unpackclass"
    name: "methodRefBuffer"
  unpackclass!unpackclass.l Lunpackclass!e;:
    owner: "unpackclass"
    name: "interfaceMethodRefBuffer"
  unpackclass!unpackclass.m Lunpackclass!e;:
    owner: "unpackclass"
    name: "branchBuffer"
  unpackclass!unpackclass.n Lunpackclass!e;:
    owner: "unpackclass"
    name: "bipushBuffer"
  unpackclass!unpackclass.o Lunpackclass!e;:
    owner: "unpackclass"
    name: "wideIincBuffer"
  unpackclass!unpackclass.p Lunpackclass!e;:
    owner: "unpackclass"
    name: "iincBuffer"
  unpackclass!unpackclass.q Lunpackclass!e;:
    owner: "unpackclass"
    name: "multiANewArrayBuffer"
  unpackclass!unpackclass.r [Lunpackclass!s;:
    owner: "unpackclass"
    name: "fieldRefEntries"
  unpackclass!unpackclass.s [Lunpackclass!s;:
    owner: "unpackclass"
    name: "methodRefEntries"
  unpackclass!unpackclass.t [Lunpackclass!s;:
    owner: "unpackclass"
    name: "interfaceMethodRefEntries"
  unpackclass!unpackclass.u [Lunpackclass!s;:
    owner: "unpackclass"
    name: "intEntries"
  unpackclass!unpackclass.v [Lunpackclass!s;:
    owner: "unpackclass"
    name: "floatEntries"
  unpackclass!unpackclass.w [Lunpackclass!s;:
    owner: "unpackclass"
    name: "longEntries"
  unpackclass!unpackclass.x [Lunpackclass!s;:
    owner: "unpackclass"
    name: "doubleEntries"
  unpackclass!unpackclass.y [Lunpackclass!s;:
    owner: "unpackclass"
    name: "fieldNameAndTypeEntries"
  unpackclass!unpackclass.z [Lunpackclass!s;:
    owner: "unpackclass"
    name: "methodNameAndTypeEntries"
  unpackclass!w.a Lunpackclass!w;:
    owner: "Node"
    name: "next"
  unpackclass!w.b Lunpackclass!w;:
    owner: "Node"
    name: "prev"
methods:
  unpackclass!a.a ()[B:
    owner: "ByteArray"
    name: "get"
    arguments: {}
    locals: {}
  unpackclass!a.a (Ljava/lang/Object;Z)[B:
    owner: "ByteArray"
    name: "unwrap"
    arguments:
      0: "in"
      1: "copy"
    locals:
      9: "bytes"
      22: "array"
  unpackclass!a.a ([B)[B:
    owner: "ByteArray"
    name: "copy"
    arguments:
      0: "in"
    locals:
      2: "len"
      5: "out"
  unpackclass!a.a ([BZ)Ljava/lang/Object;:
    owner: "ByteArray"
    name: "wrap"
    arguments:
      0: "bytes"
    locals:
      14: "array"
      20: "ex"
  unpackclass!a.b ([B)V:
    owner: "ByteArray"
    name: "set"
    arguments:
      0: "bytes"
    locals: {}
  unpackclass!aa.<init> (ZZ)V:
    owner: "Js5"
    name: "<init>"
    arguments:
      0: "discardPacked"
      1: "discardUnpacked"
    locals: {}
  unpackclass!aa.a (I)Z:
    owner: "Js5"
    name: "isGroupValid"
    arguments:
      0: "group"
    locals: {}
  unpackclass!aa.a (II)Z:
    owner: "Js5"
    name: "isFileValid"
    arguments:
      0: "group"
      1: "file"
    locals: {}
  unpackclass!aa.a (II[I)[B:
    owner: "Js5"
    name: "fetchFile"
    arguments:
      0: "group"
      1: "file"
      2: "key"
    locals:
      23: "success"
      33: "success2"
      46: "bytes"
  unpackclass!aa.a (I[I)Z:
    owner: "Js5"
    name: "unpackGroup"
    arguments:
      0: "group"
      1: "key"
    locals:
      19: "groupSize"
      24: "fileIds"
      43: "unpacked"
      45: "valid"
      47: "i"
      53: "fileId"
      100: "compressed"
      105: "buffer"
      124: "uncompressed"
      126: "ex"
      191: "position"
      198: "stripes"
      211: "buffer"
      214: "lens"
      219: "i"
      223: "len"
      225: "j"
      250: "extracted"
      252: "i"
      274: "off"
      276: "i"
      280: "len"
      282: "j"
      320: "i"
      326: "fileId"
      361: "fileId"
  unpackclass!aa.a ([B)V:
    owner: "Js5"
    name: "read"
    arguments:
      0: "bytes"
    locals:
      13: "buffer"
      16: "protocol"
      42: "flags"
      48: "prevGroupId"
      50: "maxGroupId"
      57: "i"
      142: "groupId"
      157: "i"
      179: "i"
      197: "i"
      215: "i"
      233: "i"
      240: "groupId"
      245: "groupSize"
      247: "prevFileId"
      249: "maxFileId"
      257: "j"
      273: "fileId"
      320: "i"
      327: "groupId"
      332: "groupSize"
      343: "fileId"
      361: "j"
      375: "fileId"
  unpackclass!aa.b (I)V:
    owner: "Js5"
    name: "fetchGroup"
    arguments:
      0: "group"
    locals: {}
  unpackclass!aa.b (II)[B:
    owner: "Js5"
    name: "fetchFile"
    arguments:
      0: "group"
      1: "file"
    locals: {}
  unpackclass!aa.b ([B)[B:
    owner: "Js5"
    name: "uncompress"
    arguments:
      0: "in"
    locals:
      4: "buffer"
      7: "type"
      10: "len"
      26: "out"
      36: "uncompressedLen"
      50: "out"
  unpackclass!aa.c (I)I:
    owner: "Js5"
    name: "getGroupCapacity"
    arguments: {}
    locals: {}
  unpackclass!c.a (I)[B:
    owner: "BufferPool"
    name: "allocate"
    arguments:
      0: "len"
    locals:
      12: "bytes"
      31: "bytes"
      50: "bytes"
  unpackclass!e.<init> (I)V:
    owner: "Buffer"
    name: "<init>"
    arguments:
      0: "len"
    locals: {}
  unpackclass!e.<init> ([B)V:
    owner: "Buffer"
    name: "<init>"
    arguments:
      0: "bytes"
    locals: {}
  unpackclass!e.a (I)V:
    owner: "Buffer"
    name: "writeByte"
    arguments:
      0: "value"
    locals: {}
  unpackclass!e.a (J)V:
    owner: "Buffer"
    name: "writeLong"
    arguments:
      0: "value"
    locals: {}
  unpackclass!e.a ([BI)I:
    owner: "Buffer"
    name: "crc32"
    arguments:
      0: "bytes"
      1: "len"
    locals: {}
  unpackclass!e.a ([BII)I:
    owner: "Buffer"
    name: "crc32Internal"
    arguments:
      0: "bytes"
      2: "len"
    locals:
      3: "crc"
      5: "i"
  unpackclass!e.a ([III)V:
    owner: "Buffer"
    name: "xteaDecrypt"
    arguments:
      0: "key"
      2: "len"
    locals:
      4: "oldPosition"
      13: "blocks"
      15: "i"
      20: "v0"
      23: "v1"
      25: "sum"
      29: "round"
  unpackclass!e.b (I)V:
    owner: "Buffer"
    name: "writeShort"
    arguments:
      0: "value"
    locals: {}
  unpackclass!e.b ([BII)V:
    owner: "Buffer"
    name: "writeBytes"
    arguments:
      0: "bytes"
      2: "len"
    locals:
      3: "i"
  unpackclass!e.c ()I:
    owner: "Buffer"
    name: "readUnsignedByte"
    arguments: {}
    locals: {}
  unpackclass!e.c (I)V:
    owner: "Buffer"
    name: "writeInt"
    arguments:
      0: "value"
    locals: {}
  unpackclass!e.c ([BII)V:
    owner: "Buffer"
    name: "readBytes"
    arguments:
      0: "bytes"
      2: "len"
    locals:
      3: "i"
  unpackclass!e.d ()I:
    owner: "Buffer"
    name: "readUnsignedShort"
    arguments: {}
    locals: {}
  unpackclass!e.e ()I:
    owner: "Buffer"
    name: "readShort"
    arguments: {}
    locals:
      27: "value"
  unpackclass!e.f ()I:
    owner: "Buffer"
    name: "readInt"
    arguments: {}
    locals: {}
  unpackclass!e.g ()I:
    owner: "Buffer"
    name: "readUnsignedSmart"
    arguments: {}
    locals:
      7: "peek"
  unpackclass!e.h ()I:
    owner: "Buffer"
    name: "readVarInt"
    arguments: {}
    locals:
      12: "b"
      14: "value"
  unpackclass!f.<init> ()V:
    owner: "LinkedList"
    name: "<init>"
    arguments: {}
    locals: {}
  unpackclass!f.a ()Lunpackclass!w;:
    owner: "LinkedList"
    name: "head"
    arguments: {}
    locals:
      3: "head"
  unpackclass!f.a (Lunpackclass!w;)V:
    owner: "LinkedList"
    name: "addTail"
    arguments:
      0: "node"
    locals: {}
  unpackclass!f.b ()Lunpackclass!w;:
    owner: "LinkedList"
    name: "next"
    arguments: {}
    locals:
      2: "next"
  unpackclass!i.<init> ([I)V:
    owner: "IntHashTable"
    name: "<init>"
    arguments:
      0: "keys"
    locals:
      5: "bucketCount"
      28: "i"
      43: "value"
      53: "hash"
  unpackclass!k.<init> ()V:
    owner: "GzipDecompressor"
    name: "<init>"
    arguments: {}
    locals: {}
  unpackclass!k.<init> (III)V:
    owner: "GzipDecompressor"
    name: "<init>"
    arguments:
      0: "arg0"
      1: "arg1"
      2: "arg2"
    locals: {}
  unpackclass!k.a (Lunpackclass!e;[B)V:
    owner: "GzipDecompressor"
    name: "gunzip"
    arguments:
      0: "in"
      1: "out"
    locals:
      55: "ex"
  unpackclass!l.a ([BI[BII)V:
    owner: "ArrayUtils"
    name: "copy"
    arguments:
      0: "src"
      1: "srcOff"
      2: "dest"
      3: "destOff"
      4: "len"
    locals:
      19: "srcOff2"
      23: "destOff2"
      32: "destOff3"
      35: "srcOff3"
      119: "destOff2"
      122: "srcOff2"
  unpackclass!p.<init> ([BZZ)V:
    owner: "Js5File"
    name: "<init>"
    arguments:
      0: "in"
      1: "discardPacked"
      2: "discardUnpacked"
    locals: {}
  unpackclass!p.<init> ([BZZZ)V:
    owner: "Js5File"
    name: "<init>"
    arguments:
      0: "in"
      1: "discardPacked"
      2: "discardUnpacked"
      3: "arg3"
    locals: {}
  unpackclass!p.a (Ljava/io/DataInputStream;Z)V:
    owner: "Js5File"
    name: "read"
    arguments:
      0: "in"
      1: "arg1"
    locals:
      4: "indexType"
      7: "indexRemaining"
      9: "indexCompressedLen"
      19: "indexBuffer"
      38: "i"
      43: "groupType"
      46: "groupRemaining"
      48: "groupCompressedLen"
      58: "groupBuffer"
  unpackclass!q.<init> (Ljava/lang/Throwable;Ljava/lang/String;)V:
    owner: "TracingException"
    name: "<init>"
    arguments:
      0: "cause"
      1: "message"
    locals: {}
  unpackclass!q.a (Ljava/lang/Throwable;Ljava/lang/String;)Lunpackclass!q;:
    owner: "TracingException"
    name: "wrap"
    arguments:
      0: "cause"
      1: "message"
    locals:
      5: "ex"
  unpackclass!u.a (ILunpackclass!h;)I:
    owner: "Bzip2Decompressor"
    name: "getBits"
    arguments:
      0: "nnn"
      1: "state"
    locals:
      17: "vvv"
  unpackclass!u.a (Lunpackclass!h;)V:
    owner: "Bzip2Decompressor"
    name: "unRleObufToOutputFast"
    arguments:
      0: "state"
    locals:
      2: "cStateOutCh"
      5: "cStateOutLen"
      8: "cNblockUsed"
      11: "cK0"
      13: "cTt"
      16: "cTPos"
      19: "csNextOut"
      22: "csNextOutPtr"
      25: "csAvailOut"
      27: "csAvailOutOld"
      32: "sSaveNblockPp"
      60: "gotoReturnNotr"
      76: "cTPos2"
      81: "k1"
      130: "cTPos2"
      135: "k1"
      155: "cTPos3"
      160: "k12"
      178: "cTPos4"
      183: "k13"
      188: "cNblockUsed2"
      212: "totalOutLo32Old"
  unpackclass!u.a ([BI[BII)I:
    owner: "Bzip2Decompressor"
    name: "bunzip2"
    arguments:
      0: "dest"
      1: "destLen"
      2: "src"
      3: "srcLen"
    locals: {}
  unpackclass!u.a ([I[I[I[BIII)V:
    owner: "Bzip2Decompressor"
    name: "hbCreateDecodeTables"
    arguments:
      0: "limit"
      1: "base"
      2: "perm"
      3: "length"
      4: "minLen"
      5: "maxLen"
      6: "alphaSize"
    locals:
      1: "pp"
      3: "i"
      6: "j"
      27: "i"
      38: "i"
      56: "i"
      74: "i"
      85: "vec"
      87: "i"
      100: "vec2"
      118: "i"
  unpackclass!u.b (Lunpackclass!h;)V:
    owner: "Bzip2Decompressor"
    name: "decompress"
    arguments:
      0: "state"
    locals:
      56: "gotoBzXBlkhdr1"
      60: "uc"
      67: "uc2"
      138: "i"
      142: "uc3"
      162: "i"
      174: "i"
      182: "j"
      186: "uc3"
      213: "alphaSize"
      217: "nGroups"
      221: "nSelectors"
      223: "i"
      226: "j"
      229: "uc3"
      246: "pos"
      248: "v"
      263: "i"
      269: "v2"
      273: "tmp"
      304: "t"
      309: "curr"
      311: "i"
      315: "uc3"
      320: "uc4"
      344: "t"
      347: "minLen"
      349: "maxLen"
      351: "i"
      420: "eob"
      422: "groupNo"
      426: "i"
      438: "kk"
      440: "ii"
      443: "jj"
      470: "nblock"
      473: "groupNo2"
      475: "groupPos"
      480: "gSel"
      485: "gMinlen"
      490: "gLimit"
      495: "gPerm"
      500: "gBase"
      501: "groupPos2"
      503: "zn"
      507: "zvec"
      516: "zj"
      531: "nextSym"
      541: "es"
      543: "n"
      573: "gSel2"
      596: "zn2"
      600: "zvec2"
      609: "zj2"
      630: "es2"
      643: "uc3"
      645: "unfztab"
      669: "nn"
      677: "pp"
      684: "uc3"
      689: "z"
      767: "lno"
      771: "off"
      778: "pp2"
      864: "kk2"
      866: "ii"
      869: "jj"
      934: "gSel2"
      957: "zn2"
      961: "zvec2"
      970: "zj2"
      999: "i"
      1016: "i"
      1019: "cftab"
      1036: "i"
      1044: "uc3"
      1045: "tt"
      1051: "cftab"
  unpackclass!u.c (Lunpackclass!h;)B:
    owner: "Bzip2Decompressor"
    name: "getUchar"
    arguments:
      0: "state"
    locals: {}
  unpackclass!u.d (Lunpackclass!h;)B:
    owner: "Bzip2Decompressor"
    name: "getBit"
    arguments:
      0: "state"
    locals: {}
  unpackclass!u.e (Lunpackclass!h;)V:
    owner: "Bzip2Decompressor"
    name: "makeMapsD"
    arguments:
      0: "state"
    locals:
      4: "i"
  unpackclass!unpackclass.<init> ([BZ)V:
    owner: "unpackclass"
    name: "<init>"
    arguments:
      0: "bytes"
      1: "readLineNumberTable"
    locals:
      572: "file"
      881: "classes"
      883: "i"
  unpackclass!unpackclass.a ()Lunpackclass!s;:
    owner: "unpackclass"
    name: "readCatchType"
    arguments: {}
    locals:
      3: "indexPlusOne"
      8: "index"
      13: "entry"
  unpackclass!unpackclass.a (I)[Lunpackclass!s;:
    owner: "unpackclass"
    name: "createEntries"
    arguments:
      0: "tag"
    locals:
      4: "entries"
      6: "i"
  unpackclass!unpackclass.a (Ljava/lang/String;)Lunpackclass!s;:
    owner: "unpackclass"
    name: "createUtf8Entry"
    arguments:
      0: "value"
    locals:
      3: "entry"
  unpackclass!unpackclass.a (Lunpackclass!e;[Lunpackclass!s;)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readEntry1"
    arguments:
      0: "buffer"
      1: "entries"
    locals: {}
  unpackclass!unpackclass.a (Lunpackclass!e;[Lunpackclass!s;I)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readClass"
    arguments:
      0: "buffer"
      1: "entries"
    locals:
      2: "index"
      6: "entry"
  unpackclass!unpackclass.a (Lunpackclass!s;)V:
    owner: "unpackclass"
    name: "addConstantPoolEntry"
    arguments:
      0: "entry"
    locals: {}
  unpackclass!unpackclass.a (Z)V:
    owner: "unpackclass"
    name: "readClass"
    arguments:
      0: "readLineNumberTable"
    locals:
      13: "interfaces"
      16: "fields"
      19: "methods"
      37: "i"
      40: "j"
      48: "attribute"
      74: "i"
      77: "j"
      85: "attribute"
      104: "k"
      135: "i"
      138: "j"
      146: "attribute"
      172: "i"
      175: "j"
      183: "attribute"
      209: "lineNumberTableLen"
      211: "i"
      214: "j"
      222: "attribute"
      231: "position"
      237: "lines"
      260: "startPc"
      262: "k"
      317: "lineNumber"
      319: "i"
      322: "j"
      330: "attribute"
      341: "k"
      378: "in"
      391: "accessFlagsMsb"
      393: "i"
      410: "i"
      431: "accessFlags"
      433: "i"
      451: "i"
      471: "sourceFileIndex"
      484: "sourceFile"
      492: "i"
      495: "j"
      503: "attribute"
      510: "k"
      543: "i"
      546: "j"
      554: "attribute"
      561: "k"
      598: "thisClass"
      606: "superClass"
      608: "i"
      626: "i"
      657: "i"
      690: "minorVersion"
      694: "majorVersion"
      696: "i"
      699: "j"
      707: "attribute"
      717: "nameAndType"
      720: "descriptor"
      725: "type"
      797: "i"
      800: "j"
      808: "attribute"
      815: "prevStartPc"
      817: "k"
      822: "startPc"
      837: "entry"
      863: "i"
      866: "j"
      874: "attribute"
      881: "k"
      913: "i"
      916: "j"
      924: "attribute"
      931: "k"
      965: "codePosition"
      967: "newArrayLen"
      969: "localVariableLen"
      971: "wideLocalVariableLen"
      973: "sipushAndSwitchLen"
      975: "constantLen"
      977: "wideConstantLen"
      979: "classLen"
      981: "fieldRefLen"
      983: "methodRefLen"
      985: "interfaceMethodRefLen"
      987: "branchLen"
      989: "bipushLen"
      991: "wideIincLen"
      993: "multiANewArrayLen"
      995: "i"
      998: "j"
      1006: "attribute"
      1013: "len"
      1017: "opcode"
      1025: "flags"
      1102: "cases"
      1118: "cases"
      1147: "wideOpcode"
      1152: "wideFlags"
      1198: "codeLen"
      1414: "maxOpcodes"
      1416: "maxBranches"
      1418: "maxWideBranches"
      1420: "i"
      1423: "j"
      1431: "attribute"
      1440: "opcodes"
      1442: "len"
      1444: "branches"
      1446: "wideBranches"
      1448: "k"
      1453: "opcode"
      1458: "flags"
      1493: "entry"
      1659: "len2"
      1665: "cases"
      1689: "len2"
      1693: "cases"
      1740: "wideOpcode"
      1741: "len2"
      1746: "wideFlags"
      1817: "buffer"
      1859: "outLen"
      1867: "entry"
      1899: "outLen2"
      1916: "out"
      1937: "entry"
      2025: "i"
      2043: "i"
      2075: "j"
      2083: "attribute"
      2127: "pcPosition"
      2130: "branchSources"
      2133: "branchTargets"
      2136: "wideBranchPositions"
      2139: "wideBranchSources"
      2142: "wideBranchTargets"
      2144: "i"
      2176: "j"
      2184: "attribute"
      2207: "len"
      2243: "position"
      2245: "branches"
      2247: "wideBranches"
      2249: "pc"
      2253: "opcode"
      2261: "flags"
      2306: "entry"
      2353: "index"
      2392: "entry"
      2472: "target"
      2495: "target"
      2557: "defaultTarget"
      2581: "low"
      2587: "high"
      2595: "k"
      2600: "target"
      2644: "defaultTarget"
      2668: "cases"
      2673: "key"
      2675: "k"
      2689: "target"
      2722: "entry"
      2729: "nameAndType"
      2732: "descriptor"
      2735: "descriptorBytes"
      2765: "wideOpcode"
      2773: "wideFlags"
      2812: "k"
      2845: "k"
      2885: "k"
      2907: "handlerPc"
      2935: "entry"
      2980: "k"
      3034: "k"
  unpackclass!unpackclass.a ([B)I:
    owner: "unpackclass"
    name: "getMethodDescriptorSize"
    arguments:
      0: "descriptor"
    locals:
      1: "size"
      3: "index"
      5: "className"
      10: "chr"
  unpackclass!unpackclass.a ([Lunpackclass!g;)V:
    owner: "unpackclass"
    name: "createAttributes"
    arguments:
      0: "members"
    locals:
      1: "i"
      12: "j"
  unpackclass!unpackclass.a ([Lunpackclass!s;)V:
    owner: "unpackclass"
    name: "readEntryNames"
    arguments:
      0: "entries"
    locals:
      1: "i"
  unpackclass!unpackclass.a ([Lunpackclass!s;I)V:
    owner: "unpackclass"
    name: "readNumericEntries"
    arguments:
      0: "entries"
      1: "shift"
    locals:
      1: "accumulator"
      3: "i"
  unpackclass!unpackclass.a ([Lunpackclass!s;[Lunpackclass!s;)V:
    owner: "unpackclass"
    name: "readEntryDescriptors"
    arguments:
      0: "entries"
      1: "descriptors"
    locals:
      1: "i"
  unpackclass!unpackclass.b ()V:
    owner: "unpackclass"
    name: "readUtf8Entries"
    arguments: {}
    locals:
      1: "i"
      6: "position"
      20: "len"
  unpackclass!unpackclass.b (Lunpackclass!e;[Lunpackclass!s;)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readEntry2"
    arguments:
      0: "buffer"
      1: "entries"
    locals: {}
  unpackclass!unpackclass.b (Lunpackclass!e;[Lunpackclass!s;I)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readNamedEntry"
    arguments:
      0: "buffer"
      1: "entries"
      2: "tag"
    locals:
      2: "index"
      6: "entry"
  unpackclass!unpackclass.b ([Lunpackclass!g;)V:
    owner: "unpackclass"
    name: "readAttributeNames"
    arguments:
      0: "members"
    locals:
      1: "i"
      4: "j"
  unpackclass!unpackclass.b ([Lunpackclass!s;)V:
    owner: "unpackclass"
    name: "readEntryClassNames"
    arguments:
      0: "entries"
    locals:
      1: "i"
  unpackclass!unpackclass.c ()[Lunpackclass!g;:
    owner: "unpackclass"
    name: "createMembers"
    arguments: {}
    locals:
      4: "members"
      6: "i"
  unpackclass!unpackclass.c (Lunpackclass!e;[Lunpackclass!s;)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readAndAddEntry"
    arguments:
      0: "buffer"
      1: "entries"
    locals:
      4: "entry"
  unpackclass!unpackclass.c ([Lunpackclass!g;)I:
    owner: "unpackclass"
    name: "getMembersLength"
    arguments:
      0: "members"
    locals:
      4: "len"
      6: "i"
      19: "j"
      27: "attribute"
      39: "len2"
      59: "len3"
      74: "len2"
  unpackclass!unpackclass.d (Lunpackclass!e;[Lunpackclass!s;)Lunpackclass!s;:
    owner: "unpackclass"
    name: "readEntry3"
    arguments:
      0: "buffer"
      1: "entries"
    locals: {}
  unpackclass!w.a ()V:
    owner: "Node"
    name: "unlink"
    arguments: {}
    locals: {}
  unpackclass!w.b ()Z:
    owner: "Node"
    name: "isLinked"
    arguments: {}
    locals: {}
